1. Énoncé
Générateur de mélodie personnalisé

2. Description
Générateur de mélodie personnalisé à partie de modèles de mélodie qui ont été choisis. Après avoir appris les spécifités des mélodies (nombre minimum à déterminer), l'algorithme génèrera une mélodie semblable, dans les tons, de celles qui ont été choisies.  Les mélodies seront construites à partir d'un timbre simple monophonique.

3. Analyse des besoins
Données : ensemble de mélodies choisi (midi)
Système d'apprentissage : Magenta Google AI
Interface web (API/Javascript) ou app local (Magenta/Python) : Bouton téléversement de mélodies, Bouton génération, Bouton playback, Bouton sauvegarde
Serveur Web
MusicVAE’s melody model
Synthétiseur monophonique pour le playback de la mélodie générée

4.Acquisition de connaissances (premier jet)
Étude/tutorial de Magento de Google AI (roule sous TensorFlow) et du MusicVAE’s melody model :
https://hello-magenta.glitch.me/ et https://magenta.tensorflow.org/music-vae
API Javascript : https://tensorflow.github.io/magenta-js/music/
Explorer les exemples suivants : 
Latent Loops https://teampieshop.github.io/latent-loops/
Onsets and Frames https://magenta.tensorflow.org/onsets-frames
Melody Mixer : https://experiments.withgoogle.com/ai/melody-mixer/view/
https://magenta.tensorflow.org/demos/web/
Voir les exemples de Tero Parviainen : https://github.com/teropa?tab=repositories

5. Modèle (une première ébauche)
Suite à l'apprentissage machine, selon les données reçues, le programme retournera une séquence de notes apparentés aux modèles fournis sur deux mesures.

6. Méthodes (une première ébauche)
Développer des classes qui permettrent l'upload des mélodies choisies, l'apprentissage, la génération d'une nouvelle mélodie ainsi que le playback de cette dernière. Possibilité de renforcement (prioriosé certaines règles - RL reward function à déterminer). Développer un synthétiseur monophonique simple pour le playback.

